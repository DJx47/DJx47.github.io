<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>rolabelimg使用教程</title>
      <link href="/2023/12/04/rolabelimg%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2023/12/04/rolabelimg%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><p>左键点角点改变宽高，右键点角点改变角度</p><h2 id="标签格式转换"><a href="#标签格式转换" class="headerlink" title="标签格式转换"></a>标签格式转换</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将xml格式的标签转化为txt格式，并输出标注好的图片</span></span><br><span class="line">import os</span><br><span class="line">import xml.etree.ElementTree as ET</span><br><span class="line">import math</span><br><span class="line">import cv2 as cv</span><br><span class="line"> </span><br><span class="line">def voc_to_dota(xml_path, xml_name):</span><br><span class="line">    txt_name = xml_name[:-4] + <span class="string">&#x27;.txt&#x27;</span></span><br><span class="line">    txt_path = xml_path[:-4] + <span class="string">&#x27;/txt_label&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> not os.path.exists(txt_path):</span><br><span class="line">        os.makedirs(txt_path)</span><br><span class="line">    txt_file = os.path.join(txt_path, txt_name)</span><br><span class="line">    file_path = os.path.join(xml_path, file_list[i])</span><br><span class="line">    tree = ET.parse(os.path.join(file_path))</span><br><span class="line">    root = tree.getroot()</span><br><span class="line">    <span class="comment"># print(root[6][0].text)</span></span><br><span class="line">    image_path = <span class="string">&#x27;../data/DOTA/images/&#x27;</span></span><br><span class="line">    out_path = <span class="string">&#x27;../data/DOTA/outputImg/&#x27;</span></span><br><span class="line">    filename = image_path + xml_name[:-4] + <span class="string">&#x27;.Jpeg&#x27;</span></span><br><span class="line">    img = cv.imread(filename)</span><br><span class="line">    with open(txt_file, <span class="string">&quot;w+&quot;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) as out_file:</span><br><span class="line">        <span class="comment"># out_file.write(&#x27;imagesource:null&#x27; + &#x27;\n&#x27; + &#x27;gsd:null&#x27; + &#x27;\n&#x27;)</span></span><br><span class="line">        <span class="keyword">for</span> obj <span class="keyword">in</span> root.findall(<span class="string">&#x27;object&#x27;</span>):</span><br><span class="line">            name = obj.find(<span class="string">&#x27;name&#x27;</span>).text</span><br><span class="line">            difficult = obj.find(<span class="string">&#x27;difficult&#x27;</span>).text</span><br><span class="line">            <span class="comment"># print(name, difficult)</span></span><br><span class="line">            robndbox = obj.find(<span class="string">&#x27;robndbox&#x27;</span>)</span><br><span class="line">            cx = <span class="built_in">float</span>(robndbox.find(<span class="string">&#x27;cx&#x27;</span>).text)</span><br><span class="line">            cy = <span class="built_in">float</span>(robndbox.find(<span class="string">&#x27;cy&#x27;</span>).text)</span><br><span class="line">            w = <span class="built_in">float</span>(robndbox.find(<span class="string">&#x27;w&#x27;</span>).text)</span><br><span class="line">            h = <span class="built_in">float</span>(robndbox.find(<span class="string">&#x27;h&#x27;</span>).text)</span><br><span class="line">            angle = <span class="built_in">float</span>(robndbox.find(<span class="string">&#x27;angle&#x27;</span>).text)</span><br><span class="line">            <span class="comment"># print(cx, cy, w, h, angle)</span></span><br><span class="line">            p0x, p0y = rotatePoint(cx, cy, cx - w / 2, cy - h / 2, -angle)</span><br><span class="line">            p1x, p1y = rotatePoint(cx, cy, cx + w / 2, cy - h / 2, -angle)</span><br><span class="line">            p2x, p2y = rotatePoint(cx, cy, cx + w / 2, cy + h / 2, -angle)</span><br><span class="line">            p3x, p3y = rotatePoint(cx, cy, cx - w / 2, cy + h / 2, -angle)</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># 找最左上角的点</span></span><br><span class="line">            dict = &#123;p0y:p0x, p1y:p1x, p2y:p2x, p3y:p3x&#125;</span><br><span class="line">            list = find_topLeftPopint(dict)</span><br><span class="line">            <span class="comment">#print((list))</span></span><br><span class="line">            <span class="keyword">if</span> list[0] == p0x:</span><br><span class="line">                list_xy = [p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y]</span><br><span class="line">            <span class="keyword">elif</span> list[0] == p1x:</span><br><span class="line">                list_xy = [p1x, p1y, p2x, p2y, p3x, p3y, p0x, p0y]</span><br><span class="line">            <span class="keyword">elif</span> list[0] == p2x:</span><br><span class="line">                list_xy = [p2x, p2y, p3x, p3y, p0x, p0y, p1x, p1y]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                list_xy = [p3x, p3y, p0x, p0y, p1x, p1y, p2x, p2y]</span><br><span class="line"> </span><br><span class="line">            <span class="comment"># 在原图上画矩形 看是否转换正确</span></span><br><span class="line">            cv.line(img, (int(list_xy[0]), int(list_xy[1])), (int(list_xy[2]), int(list_xy[3])), color=(255, 0, 0), thickness=3)</span><br><span class="line">            cv.line(img, (int(list_xy[2]), int(list_xy[3])), (int(list_xy[4]), int(list_xy[5])), color=(0, 255, 0), thickness= 3)</span><br><span class="line">            cv.line(img, (int(list_xy[4]), int(list_xy[5])), (int(list_xy[6]), int(list_xy[7])), color=(0, 0, 255), thickness = 2)</span><br><span class="line">            cv.line(img, (int(list_xy[6]), int(list_xy[7])), (int(list_xy[0]), int(list_xy[1])), color=(255, 255, 0), thickness = 2)</span><br><span class="line">            cv.imwrite(out_path + xml_name[:-4] + <span class="string">&#x27;.Jpeg&#x27;</span>, img)</span><br><span class="line">            data = str(list_xy[0]) + <span class="string">&quot; &quot;</span> + str(list_xy[1]) + <span class="string">&quot; &quot;</span> + str(list_xy[2]) + <span class="string">&quot; &quot;</span> + str(list_xy[3]) + <span class="string">&quot; &quot;</span> + \</span><br><span class="line">                   str(list_xy[4]) + <span class="string">&quot; &quot;</span> + str(list_xy[5]) + <span class="string">&quot; &quot;</span> + str(list_xy[6]) + <span class="string">&quot; &quot;</span> + str(list_xy[7]) + <span class="string">&quot; &quot;</span></span><br><span class="line">            data = data + name + <span class="string">&quot; &quot;</span> + difficult + <span class="string">&quot;\n&quot;</span></span><br><span class="line">            out_file.write(data)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">def find_topLeftPopint(dict):</span><br><span class="line">    dict_keys = sorted(dict.keys())  <span class="comment"># y值</span></span><br><span class="line">    temp = [dict[dict_keys[0]], dict[dict_keys[1]]]</span><br><span class="line">    minx = min(temp)</span><br><span class="line">    <span class="keyword">if</span> minx == temp[0]:</span><br><span class="line">        miny = dict_keys[0]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        miny = dict_keys[1]</span><br><span class="line">    <span class="built_in">return</span> [minx, miny]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 转换成四点坐标</span></span><br><span class="line">def rotatePoint(xc, yc, xp, yp, theta):</span><br><span class="line">    xoff = xp - xc</span><br><span class="line">    yoff = yp - yc</span><br><span class="line">    cosTheta = math.cos(theta)</span><br><span class="line">    sinTheta = math.sin(theta)</span><br><span class="line">    pResx = cosTheta * xoff + sinTheta * yoff</span><br><span class="line">    pResy = - sinTheta * xoff + cosTheta * yoff</span><br><span class="line">    <span class="comment"># pRes = (xc + pResx, yc + pResy)</span></span><br><span class="line">    <span class="comment"># 保留一位小数点</span></span><br><span class="line">    <span class="built_in">return</span> <span class="built_in">float</span>(format(xc + pResx, <span class="string">&#x27;.1f&#x27;</span>)), <span class="built_in">float</span>(format(yc + pResy, <span class="string">&#x27;.1f&#x27;</span>))</span><br><span class="line">    <span class="comment"># return xc + pResx, yc + pResy</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    root_path = <span class="string">&#x27;../data/DOTA/xml&#x27;</span></span><br><span class="line">    file_list = os.listdir(root_path)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0, len(file_list)):</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;.xml&#x27;</span> <span class="keyword">in</span> file_list[i]) or (<span class="string">&#x27;.XML&#x27;</span> <span class="keyword">in</span> file_list[i]):</span><br><span class="line">            voc_to_dota(root_path, file_list[i])</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;----------------------------------------&#123;&#125;&#123;&#125;----------------------------------------&#x27;</span></span><br><span class="line">                  .format(file_list[i], <span class="string">&#x27; has Done!&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(file_list[i] + <span class="string">&#x27; is not xml file&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>聊天机器人已上线！</title>
      <link href="/2023/11/20/%E5%8D%B3%E5%B0%86%E4%B8%8A%E7%BA%BF%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
      <url>/2023/11/20/%E5%8D%B3%E5%B0%86%E4%B8%8A%E7%BA%BF%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p>聊天机器人入口将在网页侧边栏展示<br>点击进入按钮即可进入聊天<br>快去和聪明的聊天机器人试一试吧！</p><p>进入入口：<br><a href="http://47.109.37.190:3000/" target="_blank">点击图片或此处</a><br><a href="http://47.109.37.190:3000/" target="_blank"><img src="/2023/11/20/%E5%8D%B3%E5%B0%86%E4%B8%8A%E7%BA%BF%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/chatrobot.png" alt="聊天界面"></a></p><p>备注：访问密码请联系Only温<br>加入群聊以了解更多<br><img src="/2023/11/20/%E5%8D%B3%E5%B0%86%E4%B8%8A%E7%BA%BF%E7%9A%84%E8%81%8A%E5%A4%A9%E6%9C%BA%E5%99%A8%E4%BA%BA/qrcode.png" alt="群聊二维码"></p>]]></content>
      
      
      
        <tags>
            
            <tag> robot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小董的第二篇测试文章</title>
      <link href="/2023/11/17/%E5%B0%8F%E8%91%A3%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
      <url>/2023/11/17/%E5%B0%8F%E8%91%A3%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>我是OP！<br><img src="/2023/11/17/%E5%B0%8F%E8%91%A3%E7%9A%84%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/ganyu.png" alt="ganyu"><br>甘雨真好看，嘿嘿</p><p>我的公众号：Daily咚咚</p><p><a href="https://postimg.cc/RJxMpQS5"><img src="https://i.postimg.cc/1XfftJbt/377626d531d0dcb1145c0c2ac401d7ba.jpg" alt="377626d531d0dcb1145c0c2ac401d7ba.jpg"></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小董的第一篇测试文章</title>
      <link href="/2023/11/17/%E5%B0%8F%E8%91%A3%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
      <url>/2023/11/17/%E5%B0%8F%E8%91%A3%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>这是一篇测试文章，欢迎关注作者博客<br>我诞生于2000<br>你呢？<br>欢迎关注微信公众号：Daily咚咚</p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
